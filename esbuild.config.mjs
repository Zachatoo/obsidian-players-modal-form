import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import dotenv from "dotenv";
import fs from "node:fs";

dotenv.config();

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";
const outDir = process.env.VAULT_PATH
	? `${process.env.VAULT_PATH}/.obsidian/plugins/obsidian-players-modal-form`
	: "dist";

const copyManifestPlugin = {
	name: "copy-manifest-plugin",
	setup(build) {
		build.onEnd(async () => {
			try {
				fs.cpSync("./manifest.json", `${outDir}/manifest.json`);
			} catch (e) {
				console.error("Failed to copy file:", e);
			}
		});
	},
};

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outdir: outDir,
	minify: prod,
	plugins: [copyManifestPlugin],
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
